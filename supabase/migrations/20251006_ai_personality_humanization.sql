-- ============================================
-- AI PERSONALITY HUMANIZATION
-- Adiciona campos para personaliza√ß√£o completa da IA
-- ============================================

-- Adicionar colunas de configura√ß√£o de personalidade na organization_settings
ALTER TABLE organization_settings
ADD COLUMN IF NOT EXISTS ai_personality_config JSONB DEFAULT '{
  "client_ai": {
    "name": "Luna",
    "personality": "amigavel",
    "tone": "casual",
    "emoji_frequency": "medium",
    "brazilian_slang": true,
    "empathy_level": 8
  },
  "aurora": {
    "name": "Aurora",
    "personality": "parceira-proxima",
    "tone": "coleguinha",
    "data_driven_style": "celebratorio"
  }
}'::jsonb,
ADD COLUMN IF NOT EXISTS ai_response_style JSONB DEFAULT '{
  "greeting_style": "casual",
  "error_handling": "empathetic",
  "confirmation_style": "enthusiastic",
  "use_variations": true
}'::jsonb,
ADD COLUMN IF NOT EXISTS emoji_settings JSONB DEFAULT '{
  "enabled": true,
  "context_aware": true,
  "frequency": "medium",
  "custom_mappings": {}
}'::jsonb,
ADD COLUMN IF NOT EXISTS ai_onboarding_completed BOOLEAN DEFAULT false;

-- Criar tabela para templates de respostas variadas
CREATE TABLE IF NOT EXISTS ai_response_templates (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,
  template_type TEXT NOT NULL, -- 'greeting', 'error', 'confirmation', 'closing', etc
  context TEXT, -- contexto adicional (ex: 'morning', 'night', 'urgent')
  variations TEXT[] NOT NULL, -- array de varia√ß√µes de resposta
  language TEXT DEFAULT 'pt-BR',
  tone TEXT DEFAULT 'casual', -- 'casual', 'formal', 'energetic'
  emoji_included BOOLEAN DEFAULT true,
  usage_count INTEGER DEFAULT 0,
  last_used_at TIMESTAMPTZ,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- Garantir que h√° pelo menos uma varia√ß√£o
  CONSTRAINT at_least_one_variation CHECK (array_length(variations, 1) > 0)
);

-- Criar √≠ndices para performance
CREATE INDEX IF NOT EXISTS idx_response_templates_org_type
  ON ai_response_templates(organization_id, template_type, is_active);

CREATE INDEX IF NOT EXISTS idx_response_templates_context
  ON ai_response_templates(context, tone);

-- Habilitar RLS
ALTER TABLE ai_response_templates ENABLE ROW LEVEL SECURITY;

-- RLS Policies para ai_response_templates
CREATE POLICY "Users can view own org response templates"
  ON ai_response_templates FOR SELECT
  USING (
    organization_id IS NULL OR -- templates globais
    organization_id IN (
      SELECT organization_id FROM user_roles WHERE user_id = auth.uid()
    )
  );

CREATE POLICY "Users can manage own org response templates"
  ON ai_response_templates FOR ALL
  USING (
    organization_id IN (
      SELECT organization_id FROM user_roles WHERE user_id = auth.uid()
    )
  );

-- Inserir templates padr√£o de respostas humanizadas
INSERT INTO ai_response_templates (organization_id, template_type, context, variations, tone) VALUES
-- Sauda√ß√µes
(NULL, 'greeting', 'general', ARRAY[
  'Oi! Como posso te ajudar? üòä',
  'Ol√°! Tudo bem? Em que posso ajudar?',
  'Opa! Diga, como posso te ajudar hoje?',
  'E a√≠! Tudo certo? O que voc√™ precisa?',
  'Ol√°! Como posso te ajudar hoje?'
], 'casual'),

(NULL, 'greeting', 'morning', ARRAY[
  'Bom dia! ‚òÄÔ∏è Como posso te ajudar?',
  'Oi! Bom dia! Tudo bem?',
  'Bom dia! Em que posso ajudar hoje?'
], 'casual'),

(NULL, 'greeting', 'night', ARRAY[
  'Boa noite! üåô Como posso te ajudar?',
  'Oi! Boa noite! Tudo bem?',
  'Boa noite! Em que posso ajudar?'
], 'casual'),

-- Erros / N√£o entendimento
(NULL, 'error', 'misunderstanding', ARRAY[
  'Opa, n√£o entendi muito bem. Pode reformular? üòÖ',
  'Hmm, n√£o consegui pegar. Me explica de outro jeito?',
  'Nossa, me perdi aqui. Pode dizer novamente? ü§î',
  'Acho que n√£o te entendi direito. Pode repetir?',
  'Desculpa, n√£o entendi bem. Pode explicar melhor?'
], 'casual'),

(NULL, 'error', 'system_error', ARRAY[
  'Opa! Tive um probleminha aqui. Pode tentar de novo? üòÖ',
  'Eita! Algo deu errado. Vamos tentar novamente?',
  'Hmm, parece que algo n√£o funcionou. Tenta de novo?'
], 'casual'),

-- Confirma√ß√µes de agendamento
(NULL, 'confirmation', 'booking_confirmed', ARRAY[
  'Pronto! Agendamento confirmado para {date} √†s {time}! ‚úÖ',
  'Perfeito! Est√° agendado para {date} √†s {time}! üéâ',
  'Confirmado! Te espero no dia {date} √†s {time}! üëç',
  'Tudo certo! Agendado para {date} √†s {time}! üíö'
], 'casual'),

-- Cadastro de pet
(NULL, 'confirmation', 'pet_registered', ARRAY[
  'Que legal! {pet_name} est√° cadastrado! üêï',
  'Pronto! {pet_name} j√° est√° no sistema! ‚ù§Ô∏è',
  'Cadastrado! Bem-vindo(a) {pet_name}! üéä',
  'Tudo certo! {pet_name} foi cadastrado com sucesso! üíö'
], 'casual'),

-- Fechamentos
(NULL, 'closing', 'general', ARRAY[
  'Precisando de algo, √© s√≥ chamar! üòä',
  'Qualquer coisa, estou por aqui! üëã',
  'Se precisar de mais alguma coisa, me chama! üíö',
  'At√© logo! Qualquer coisa, estou aqui! üòä'
], 'casual'),

-- Aurora - Celebra√ß√µes
(NULL, 'celebration', 'milestone', ARRAY[
  'Opa! A gente bateu meta! üéâ',
  'Ebaaa! Meta alcan√ßada! ü•≥',
  'Uhul! Conseguimos! üôå',
  'Que show! Batemos a meta! üéä'
], 'casual'),

-- Aurora - Oportunidades
(NULL, 'opportunity', 'suggestion', ARRAY[
  'Opa! Vi uma oportunidade aqui... üí°',
  'Olha s√≥ o que eu encontrei... üöÄ',
  'Tenho uma ideia boa pra te contar! üí™',
  'Vi algo interessante que pode te ajudar! üî•'
], 'casual'),

-- Aurora - Alertas
(NULL, 'alert', 'warning', ARRAY[
  'Opa! Temos um alerta aqui... ‚ö†Ô∏è',
  'Eita! Aten√ß√£o pra isso aqui... üö®',
  'Hmm, melhor dar uma olhada nisso... üëÄ',
  'V√™ se consegue resolver isso... ‚è∞'
], 'casual')

ON CONFLICT DO NOTHING;

-- Fun√ß√£o para selecionar varia√ß√£o aleat√≥ria
CREATE OR REPLACE FUNCTION get_random_response_variation(
  p_template_type TEXT,
  p_context TEXT DEFAULT NULL,
  p_organization_id UUID DEFAULT NULL,
  p_tone TEXT DEFAULT 'casual'
)
RETURNS TEXT
LANGUAGE plpgsql
AS $$
DECLARE
  v_variations TEXT[];
  v_selected TEXT;
  v_template_id UUID;
BEGIN
  -- Buscar template (preferir org-specific, depois global)
  SELECT id, variations INTO v_template_id, v_variations
  FROM ai_response_templates
  WHERE template_type = p_template_type
    AND (context = p_context OR (context IS NULL AND p_context IS NULL))
    AND (organization_id = p_organization_id OR (organization_id IS NULL AND p_organization_id IS NULL))
    AND tone = p_tone
    AND is_active = true
  ORDER BY
    CASE WHEN organization_id = p_organization_id THEN 1 ELSE 2 END, -- priorizar org-specific
    last_used_at NULLS FIRST -- priorizar menos usados
  LIMIT 1;

  -- Se n√£o encontrou, tentar sem contexto
  IF v_variations IS NULL THEN
    SELECT id, variations INTO v_template_id, v_variations
    FROM ai_response_templates
    WHERE template_type = p_template_type
      AND context IS NULL
      AND (organization_id = p_organization_id OR organization_id IS NULL)
      AND tone = p_tone
      AND is_active = true
    ORDER BY
      CASE WHEN organization_id = p_organization_id THEN 1 ELSE 2 END
    LIMIT 1;
  END IF;

  -- Se ainda n√£o encontrou, retornar NULL
  IF v_variations IS NULL OR array_length(v_variations, 1) = 0 THEN
    RETURN NULL;
  END IF;

  -- Selecionar varia√ß√£o aleat√≥ria
  v_selected := v_variations[1 + floor(random() * array_length(v_variations, 1))::int];

  -- Atualizar contadores
  IF v_template_id IS NOT NULL THEN
    UPDATE ai_response_templates
    SET usage_count = usage_count + 1,
        last_used_at = NOW()
    WHERE id = v_template_id;
  END IF;

  RETURN v_selected;
END;
$$;

-- Coment√°rios
COMMENT ON TABLE ai_response_templates IS 'Templates de respostas variadas para humaniza√ß√£o da IA';
COMMENT ON COLUMN organization_settings.ai_personality_config IS 'Configura√ß√£o completa de personalidade da IA (Client AI e Aurora)';
COMMENT ON COLUMN organization_settings.ai_response_style IS 'Estilo de respostas da IA (sauda√ß√µes, erros, confirma√ß√µes)';
COMMENT ON COLUMN organization_settings.emoji_settings IS 'Configura√ß√µes de uso de emojis';
COMMENT ON FUNCTION get_random_response_variation IS 'Retorna uma varia√ß√£o aleat√≥ria de resposta baseada no tipo e contexto';
