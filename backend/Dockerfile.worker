# ====================================
# Build Stage
# ====================================
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

# Copy backend package files
COPY backend/package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm install

# Copy backend source code
COPY backend/ ./

# Build TypeScript
RUN npm run build

# ====================================
# Production Stage - WORKERS
# ====================================
FROM node:20-alpine

WORKDIR /app

# Install runtime dependencies only
RUN apk add --no-cache \
    tini \
    dumb-init \
    git

# Copy backend package files
COPY backend/package*.json ./

# Install production dependencies only (skip prepare scripts)
RUN npm install --production --ignore-scripts && npm cache clean --force

# Copy built files from builder
COPY --from=builder /app/dist ./dist

# Switch to non-root user for security
USER node

# Health check (workers don't expose HTTP but we check Redis connection)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('ioredis').createClient(process.env.REDIS_URL).ping().then(() => process.exit(0)).catch(() => process.exit(1))"

# Use tini for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start ALL workers (message, campaign, automation, vasculhada)
CMD ["node", "dist/queue/workers/all.js"]
